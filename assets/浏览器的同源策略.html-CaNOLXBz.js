import{_ as e,r as o,o as c,c as l,a as n,b as s,d as t,e as p}from"./app-Bn7XLESk.js";const i="/imgs/%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98.png",u="/imgs/%E9%A2%84%E6%A3%80%E8%AF%B7%E6%B1%82.png",r="/imgs/JSONP%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98.png",d={},k=n("h1",{id:"浏览器的同源策略",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#浏览器的同源策略"},[n("span",null,"浏览器的同源策略")])],-1),v=n("p",null,"参考文档",-1),m={href:"https://www.ruanyifeng.com/blog/2016/04/same-origin-policy.html",target:"_blank",rel:"noopener noreferrer"},g={href:"https://www.bilibili.com/video/BV1pT421k7yz/?share_source=copy_web&vd_source=637a17631c58c283d29c16f50dab56a9",target:"_blank",rel:"noopener noreferrer"},b=p(`<h2 id="一、为什么会出现跨域问题" tabindex="-1"><a class="header-anchor" href="#一、为什么会出现跨域问题"><span>一、为什么会出现跨域问题</span></a></h2><p>出于浏览器的同源策略限制。同源策略（Sameoriginpolicy）是一种约定，它是浏览器最核心也最基本的安全功能，如果缺少了同源策略，则浏览器的正常功能可能都会受到影响。可以说 Web 是构建在同源策略基础之上的，浏览器只是针对同源策略的一种实现。同源策略会阻止一个域的 javascript 脚本和另外一个域的内容进行交互。所谓同源（即指在同一个域）就是两个页面具有相同的协议（protocol），主机（host）和端口号（port）</p><h2 id="二、什么是跨域" tabindex="-1"><a class="header-anchor" href="#二、什么是跨域"><span>二、什么是跨域</span></a></h2><p>当一个请求 url 的协议、域名、端口三者之间任意一个与当前页面 url 不同即为跨域</p><table><thead><tr><th>当前页面 url</th><th>被请求页面 url</th><th>是否跨域</th><th>原因</th></tr></thead><tbody><tr><td>http://www.test.com/</td><td>http://www.test.com/index.html</td><td>否</td><td>同源（协议、域名、端口号相同）</td></tr><tr><td>http://www.test.com/</td><td>https://www.test.com/index.html</td><td>跨域</td><td>协议不同（http/https）</td></tr><tr><td>http://www.test.com/</td><td>http://www.baidu.com/</td><td>跨域</td><td>主域名不同（test/baidu）</td></tr><tr><td>http://www.test.com/</td><td>http://blog.test.com/</td><td>跨域</td><td>子域名不同（www/blog）</td></tr><tr><td>http://www.test.com:8080/</td><td>http://www.test.com:7001/</td><td>跨域</td><td>端口号不同（8080/7001）</td></tr></tbody></table><h2 id="三、浏览器会对跨域做出那些限制" tabindex="-1"><a class="header-anchor" href="#三、浏览器会对跨域做出那些限制"><span>三、浏览器会对跨域做出那些限制？</span></a></h2><ol><li>DOM 访问限制：【源 A】的脚本不能读取和操作【源 B】的 DOM。</li></ol><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">showDom</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>获取页面2的DOM<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 同源，能获取到DOM --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>frame<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>./z.html<span class="token punctuation">&quot;</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!-- 非同源，报错！！！ --&gt;</span>
    <span class="token comment">&lt;!-- &lt;iframe id=&quot;frame&quot; src=&quot;https://www.bilibili.com/&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt; --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
      <span class="token keyword">function</span> <span class="token function">showDom</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> frame <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;frame&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>frame<span class="token punctuation">.</span>contentWindow<span class="token punctuation">.</span>document<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>Cookie 访问限制：【源 A】不能访问【源 B】的 cookie</li></ol><p>JS 获取 cookie 的方式，documnet.cookie，上面一步知道不能获取非同源网站的 DOM，自然也不好获取到 cookie。</p><ol start="3"><li>AJAX 响应数据限制：【源 A】可以给【源 B】发请求，但是无法获取【源 B】响应的数据。（影响最大！！！）</li></ol><p><strong>几个注意点</strong></p><ol><li>跨域限制仅存在浏览器端，服务端不存在跨域限制。</li><li>即使跨域了，AJax 请求也可以正常发出，但响应数据不会交给开发者。 <img src="`+i+`" alt="跨域问题"></li><li><code>&lt;link&gt;</code>、<code>&lt;script&gt;</code>、<code>&lt;img&gt;</code>……这些标签发出去的请求也可能跨域，只不过浏览器对标签跨域不做严格限制，对开发几乎无影响。(可以配置 CSP)</li></ol><h2 id="四、解决跨域问题" tabindex="-1"><a class="header-anchor" href="#四、解决跨域问题"><span>四、解决跨域问题</span></a></h2><h3 id="cors-解决-ajax-跨域问题" tabindex="-1"><a class="header-anchor" href="#cors-解决-ajax-跨域问题"><span>CORS 解决 AJAX 跨域问题</span></a></h3><p><strong>CORS 概述</strong></p><p>CORS 全称：<code>Cross-Origin Resource Sharing</code>(跨域资源共享)，是用于<code>浏览器校验</code>跨域请求的一套规范，服务器依照 CORS 规范，添加特定<code>响应头</code>来控制浏览器校验，大致规则如下：</p><ul><li>服务器明确表示<code>拒绝请求</code>，或者<code>没有表示</code>，则浏览器校验<code>不通过</code>。</li><li>服务器明确表示<code>允许跨域请求</code>，则浏览器校验<code>通过</code>。 <blockquote><p>备注说明：使用 CORS 解决跨域是最正统的方式，且要求服务器是“自己人”。</p></blockquote></li></ul><p><strong>CORS 解决简单请求跨域</strong> 简单请求解决代码</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/students&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Origin&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;http://127.0.0.1:5500&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>students<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>简单请求与复杂请求</strong></p><p>CORS 会把请求分为两类，分别是：简单请求、复杂请求</p><p><strong>简单请求：</strong></p><ol><li>请求方法为：<code>GET</code>、<code>HEAD</code>、<code>POST</code></li><li>请求头字段要符合《CORS 安全规范》<br> 简记：只要不动手修改请求头，一般都能符合规范</li><li>请求头的<code>Content-Type</code>的值只能是一下三种： <ul><li><code>text/plain</code></li><li><code>multipart/form-data</code></li><li><code>application/x-www-form-urlencoded</code></li></ul></li></ol><p><strong>复杂请求</strong></p><ol><li>不是简单请求，就是复杂请求</li><li>复杂请求会自动发送<code>预检请求</code></li></ol><p><strong>关于预检请求：</strong></p><ol><li>发送时机：预检请求在实际跨域请求之前发出，是由浏览器自动发起的。</li><li>主要作用：用于向服务器确认是否允许接下来的跨域请求。</li><li>基本流程：发起<code>options</code>请求，如果通过预检，继续发起实际的跨域请求。</li><li>请求头内容：一个<code>options</code>预检请求，通常会包含如下请求头： <table><thead><tr><th>请求头</th><th>含义</th></tr></thead><tbody><tr><td><code>Origin</code></td><td>发起请求的源</td></tr><tr><td><code>Access-Control-Request-Method</code></td><td>实际请求的 HTTP 方法</td></tr><tr><td><code>Access-Control-Request-Headers</code></td><td>实际请求中使用的自定义头（如果有的话）</td></tr></tbody></table></li></ol><p><strong>CORS 解决复杂请求跨域</strong> 1.第一步：服务器先通过浏览器的预检请求，服务器需要返回如下响应头：</p><table><thead><tr><th>请求头</th><th>含义</th></tr></thead><tbody><tr><td><code>Access-Control-Allow-Origin</code></td><td>允许的源</td></tr><tr><td><code>Access-Control-Allow-Methods</code></td><td>允许的方法</td></tr><tr><td><code>Access-Control-Allow-Headers</code></td><td>允许的自定义头</td></tr><tr><td><code>Access-Control-Max-Age</code></td><td>预检请求的结果缓存时间（可选）</td></tr></tbody></table><p><img src="`+u+`" alt="预检请求"></p><p>复杂请求解决代码</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/students&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Origin&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;http://127.0.0.1:5500&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>students<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">options</span><span class="token punctuation">(</span><span class="token string">&quot;/students&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Origin&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;http://127.0.0.1:5500&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Methods&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;GET&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//浏览器带来的请求头中可能存在</span>
  res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Headers&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;school,city&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Max-Age&quot;</span><span class="token punctuation">,</span> <span class="token number">7200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>第二步：处理实际的跨域请求（与处理简单跨域请求的方式相同）</li></ol><p><strong>利用 cors 库解决跨域</strong></p><ul><li>简单配置</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">cors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>完整配置</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// cors中间件配置</span>
<span class="token keyword">const</span> corsOptions <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">origin</span><span class="token operator">:</span> <span class="token string">&quot;http://127.0.0.1:5500&quot;</span><span class="token punctuation">,</span> <span class="token comment">//允许的源</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;PUT&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;DELETE&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;HEAD&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;OPTIONS&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">//允许的方法</span>
  <span class="token literal-property property">allowedHeaders</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;school&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">//允许的自定义头</span>
  <span class="token literal-property property">exposedHeaders</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;abs&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">//要暴露的响应头</span>
  <span class="token literal-property property">optionsSuccessStatus</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token comment">// 预检请求成功的状态码</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token function">cors</span><span class="token punctuation">(</span>corsOptions<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="jsonp-解决跨域问题" tabindex="-1"><a class="header-anchor" href="#jsonp-解决跨域问题"><span>JSONP 解决跨域问题</span></a></h3><ol><li>JSONP 概述：JSONP 是利用了<code>&lt;script&gt;</code>标签可以跨域加载脚本，且不受严格限制的特性，可以说是程序员智慧的结晶，早起一些浏览器不支持 CORS 的时候，可以考 JSONP 解决跨域。</li><li>基本流程： <ul><li>第一步：客户端创建一个<code>&lt;script&gt;</code>标签，并将其 src 属性设置为包含跨域请求的 URL，同时准备一个回调函数，这个回调函数用于处理返回的数据。</li><li>第二步：服务器接收到请求后，将数据封装在回调函数中并返回。</li><li>第三步：客户端的回调函数被调用，数据以参数的形式传入回调函数。</li></ul></li></ol><p><img src="`+r+`" alt="JSONP解决跨域问题"></p><p>客户端代码</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>viewport<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>width=device-width, initial-scale=1.0<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">getStudents</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>获取学生数据<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
      <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">function</span> <span class="token function">getStudents</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> script <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;script&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        script<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          script<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        script<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">&quot;http://127.0.0.1:8081/teachers?callback=test&quot;</span><span class="token punctuation">;</span>
        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>服务端代码：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/teachers&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> callback <span class="token punctuation">}</span> <span class="token operator">=</span> req<span class="token punctuation">.</span>query<span class="token punctuation">;</span>
  res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>callback<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>teachers<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置代理服务器" tabindex="-1"><a class="header-anchor" href="#配置代理服务器"><span>配置代理服务器</span></a></h3><p><strong>脚手架配置代理服务器</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>  <span class="token literal-property property">server</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token comment">// 允许IP访问</span>
      <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">&#39;0.0.0.0&#39;</span><span class="token punctuation">,</span>
      <span class="token comment">// 应用端口 (默认:3000)</span>
      <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">80</span><span class="token punctuation">,</span>
      <span class="token comment">// 运行是否自动打开浏览器</span>
      <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token literal-property property">proxy</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/**
         * 反向代理解决跨域配置
         * http://localhost:3000/dev-api/users (F12可见请求路径) =&gt; http://localhost:8989/users (实际请求后端 API 路径)
         *
         * env.VITE_APP_BASE_API: /dev-api
         * env.VITE_APP_API_URL: http://localhost:8989
         */</span>
        <span class="token string-property property">&#39;/api&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">changeOrigin</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
          <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">&#39;http://127.0.0.1:8080&#39;</span><span class="token punctuation">,</span> <span class="token comment">//后端地址</span>
          <span class="token function-variable function">rewrite</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">//  前端：/dev-api/api/v1/users/me  --&gt; 后端： /api/v1/users/me</span>

            <span class="token comment">/* 
            表面肉眼看到的请求地址: http://localhost:3000/dev-api/api/v1/users/me
            
            真实访问的代理目标地址: http://vapi.youlai.tech/api/v1/users/me
            
            */</span>
            <span class="token keyword">return</span> path<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&#39;^&#39;</span> <span class="token operator">+</span> env<span class="token punctuation">.</span><span class="token constant">VITE_APP_BASE_API</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token comment">//重写路径</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>自己配置代理服务器</strong></p>`,50),h={href:"https://www.npmjs.com/package/http-proxy-middleware",target:"_blank",rel:"noopener noreferrer"},q=n("code",null,"http-proxy-middleware",-1),w=p(`<div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> createProxyMiddleWare <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;http-proxy-middleware&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
  <span class="token string">&quot;/api&quot;</span><span class="token punctuation">,</span>
  <span class="token function">createProxyMiddleWare</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">&quot;https://www.toutiao.com&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">changeOrigin</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">pathRewrite</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string-property property">&quot;^/api&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 实际请求：https://www.toutiao.com/news/today</span>
<span class="token comment">// 客户端请求：http:127.0.0.1:8086/api/news/today</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>利用 NGINX 配置代理服务器</strong> 通过中间代理服务器获取界面和数据：</p><blockquote><p>浏览器请求--&gt;Nginx服务器--&gt;Nginx请求服务端数据</p></blockquote><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code> upstream lb{
        server 127.0.0.1:8000;
    }

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;


        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        # 数字马力分享
        location / {
            root   html;
            index  shuma_test.html index.htm;
        }

        location /api {
            proxy_pass http://lb;
        }

    }
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>面试的时候可以提自己配代理，和 NGINX 配置代理。</p></blockquote>`,5);function y(f,_){const a=o("ExternalLinkIcon");return c(),l("div",null,[k,v,n("p",null,[n("a",m,[s("浏览器同源政策及其规避方法"),t(a)])]),n("p",null,[n("a",g,[s("禹神：一小时彻底搞懂跨域&解决方案"),t(a)])]),b,n("blockquote",null,[n("p",null,[s("利用 "),n("a",h,[q,t(a)]),s(" 这个库去配置")])]),w])}const x=e(d,[["render",y],["__file","浏览器的同源策略.html.vue"]]),E=JSON.parse('{"path":"/advance/%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5.html","title":"浏览器的同源策略","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"一、为什么会出现跨域问题","slug":"一、为什么会出现跨域问题","link":"#一、为什么会出现跨域问题","children":[]},{"level":2,"title":"二、什么是跨域","slug":"二、什么是跨域","link":"#二、什么是跨域","children":[]},{"level":2,"title":"三、浏览器会对跨域做出那些限制？","slug":"三、浏览器会对跨域做出那些限制","link":"#三、浏览器会对跨域做出那些限制","children":[]},{"level":2,"title":"四、解决跨域问题","slug":"四、解决跨域问题","link":"#四、解决跨域问题","children":[{"level":3,"title":"CORS 解决 AJAX 跨域问题","slug":"cors-解决-ajax-跨域问题","link":"#cors-解决-ajax-跨域问题","children":[]},{"level":3,"title":"JSONP 解决跨域问题","slug":"jsonp-解决跨域问题","link":"#jsonp-解决跨域问题","children":[]},{"level":3,"title":"配置代理服务器","slug":"配置代理服务器","link":"#配置代理服务器","children":[]}]}],"filePathRelative":"advance/浏览器的同源策略.md","git":{"createdTime":1721959728000,"updatedTime":1722767167000,"contributors":[{"name":"xiaoyu","email":"luoyu2003@outlook.com","commits":2}]},"readingTime":{"minutes":6.68,"words":2005}}');export{x as comp,E as data};
