import{_ as n,o as s,c as a,e as t}from"./app-Bn7XLESk.js";const p={},e=t(`<h1 id="别想调试我的前端页面代码" tabindex="-1"><a class="header-anchor" href="#别想调试我的前端页面代码"><span>别想调试我的前端页面代码!</span></a></h1><blockquote><p>下面的这些技术可以增加攻击者分析和调试代码的难度，但无法完全阻止恶意调试。因此，对于一些敏感信息或关键逻辑，最好的方式是在后端进行处理，而不是完全依赖前端来保护。</p></blockquote><p>这里我们不介绍<code>禁止右键菜单</code>, <code>禁止F12快捷键</code>和<code>代码混淆</code>方案。</p><h2 id="无限debugger" tabindex="-1"><a class="header-anchor" href="#无限debugger"><span>无限debugger</span></a></h2><ul><li>前端页面防止调试的方法主要是通过不断 debugger 来疯狂输出断点，因为 debugger 在控制台被打开的时候就会执行</li><li>由于程序被 debugger 阻止，所以无法进行断点调试，所以网页的请求也是看不到的.</li></ul><h3 id="基础方案" tabindex="-1"><a class="header-anchor" href="#基础方案"><span>基础方案</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">ban</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token keyword">debugger</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token function">ban</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>将 setInterval 中的代码写在一行，可以禁止用户断点，即使添加 logpoint 为 false 也无用</li><li>当然即使有些人想到用左下角的格式化代码，将其变成多行也是没用的</li></ul><h3 id="浏览器宽高" tabindex="-1"><a class="header-anchor" href="#浏览器宽高"><span>浏览器宽高</span></a></h3><p>根据浏览器宽高、与打开F12后的宽高进行比对，有差值，说明打开了调试，则替换html内容；</p><ul><li>通过检测窗口的外部高度和宽度与内部高度和宽度的差值，如果差值大于 200，就将页面内容设置为 &quot;检测到非法调试&quot;。</li><li>通过使用间隔为 50 毫秒的定时器，在每次间隔内执行一个函数，该函数通过创建一个包含 debugger 语句的函数，并立即调用该函数的方式来试图阻止调试器的正常使用。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">block</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>outerHeight <span class="token operator">-</span> window<span class="token punctuation">.</span>innerHeight <span class="token operator">&gt;</span> <span class="token number">200</span> <span class="token operator">||</span> window<span class="token punctuation">.</span>outerWidth <span class="token operator">-</span> window<span class="token punctuation">.</span>innerWidth <span class="token operator">&gt;</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&quot;检测到非法调试&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token punctuation">[</span><span class="token string">&#39;constructor&#39;</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">&#39;debugger&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">[</span><span class="token string">&#39;call&#39;</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token function">block</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="关闭断点-调整空页面" tabindex="-1"><a class="header-anchor" href="#关闭断点-调整空页面"><span>关闭断点，调整空页面</span></a></h3><p>在不打开发者工具的情况下，debugger是不会执行将页面卡住，而恰恰是利用debugger的这一点，如果你打开开发者工具一定会被debugger卡住，那么上下文时间间隔就会增加，在对时间间隔进行判断，就能巧妙的知道绝对开了开发者工具，随后直接跳转到空白页，一气呵成。(文心一言采用方案)</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> startTime <span class="token operator">=</span> performance<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 设置断点</span>
  <span class="token keyword">debugger</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> endTime <span class="token operator">=</span> performance<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 设置一个阈值，例如100毫秒</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>endTime <span class="token operator">-</span> startTime <span class="token operator">&gt;</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">&#39;about:blank&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="第三方插件" tabindex="-1"><a class="header-anchor" href="#第三方插件"><span>第三方插件</span></a></h2><h3 id="disable-devtool" tabindex="-1"><a class="header-anchor" href="#disable-devtool"><span>disable-devtool</span></a></h3><blockquote><p>disable-devtool可以禁用所有一切可以进入开发者工具的方法，防止通过开发者工具进行的代码搬运。</p></blockquote><p>该库有以下特性:</p><ul><li>支持可配置是否禁用右键菜单</li><li>禁用 f12 和 ctrl+shift+i 等快捷键</li><li>支持识别从浏览器菜单栏打开开发者工具并关闭当前页面</li><li>开发者可以绕过禁用 (url参数使用tk配合md5加密)</li><li>多种监测模式，支持几乎所有浏览器（IE,360,qq浏览器,FireFox,Chrome,Edge...）</li><li>高度可配置、使用极简、体积小巧</li><li>支持npm引用和script标签引用(属性配置)</li><li>识别真移动端与浏览器开发者工具设置插件伪造的移动端，为移动端节省性能</li><li>支持识别开发者工具关闭事件</li><li>支持可配置是否禁用选择、复制、剪切、粘贴功能</li><li>支持识别 eruda 和 vconsole 调试工具</li><li>支持挂起和恢复探测器工作</li><li>支持配置ignore属性，用以自定义控制是否启用探测器</li><li>支持配置iframe中所有父页面的开发者工具禁用</li></ul><p><br>作者：Aplee <br>链接：https://juejin.cn/post/7368313344712179739 <br>来源：稀土掘金</p>`,21),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","别想调试我的前端页面代码!.html.vue"]]),d=JSON.parse('{"path":"/advance/%E5%88%AB%E6%83%B3%E8%B0%83%E8%AF%95%E6%88%91%E7%9A%84%E5%89%8D%E7%AB%AF%E9%A1%B5%E9%9D%A2%E4%BB%A3%E7%A0%81!.html","title":"别想调试我的前端页面代码!","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"无限debugger","slug":"无限debugger","link":"#无限debugger","children":[{"level":3,"title":"基础方案","slug":"基础方案","link":"#基础方案","children":[]},{"level":3,"title":"浏览器宽高","slug":"浏览器宽高","link":"#浏览器宽高","children":[]},{"level":3,"title":"关闭断点，调整空页面","slug":"关闭断点-调整空页面","link":"#关闭断点-调整空页面","children":[]}]},{"level":2,"title":"第三方插件","slug":"第三方插件","link":"#第三方插件","children":[{"level":3,"title":"disable-devtool","slug":"disable-devtool","link":"#disable-devtool","children":[]}]}],"filePathRelative":"advance/别想调试我的前端页面代码!.md","git":{"createdTime":1717914125000,"updatedTime":1717914125000,"contributors":[{"name":"xiaoyu","email":"luoyu2003@outlook.com","commits":1}]},"readingTime":{"minutes":3.07,"words":921}}');export{r as comp,d as data};
