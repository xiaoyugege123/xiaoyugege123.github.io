import{_ as e,o as l,c as t,e as i}from"./app-Bn7XLESk.js";const a="/imgs/leetcode.png",o={},s=i('<h1 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h1><p><strong>——小菜鸡一个说法</strong></p><blockquote><p>其实我感觉我在这上面没有太多的话语权，我自己开始课程学算法的时候就觉的难，根本听不进去，然后又有其他事情，就学不进一点算法。但是我觉的我做的好的一个点是我上课的时候还是去了课堂上听课，知道老师讲哪里来了，知道双指针、滑动窗口、并查集、动态规划、二分是啥。后面准备面试了，才发现算法在开发岗面试经常能碰到。后面开始准备还是对咱们这个课上听到的有点印象，虽然说重新学的过程很难，主要你能坚持下来，多刷题，相信会找到学算法的门路的！<br> 面试的算法我挂了一题（美团一面，因为算法挂了），还有一题没完全写出来但讲好了思路（腾讯二面——字符串相乘），主要是刚开始，有些地方确实薄弱</p></blockquote><p>面试中的算法baseline</p><ul><li>美团一面：最小深度二叉树</li><li>腾讯二面：10000!、二叉树BFS</li><li>腾讯云三面：字符串相乘</li><li>腾讯金融一面：最大无重复子串</li><li>小米二面：接雨水</li></ul><p>笔试中的算法一般是出两道到三道：第一道非常的简单，但是还是有点难，能解决的样子。让我印象深的就是恒生电子考的全是金融相关的算法题，贪心、动规，你还得了解一下金融相关的知识，比如买卖股票；哦，还有一个印象深，阿里，三道算法一个不会，第一题我本来用JS内置方法是能解决的，但超时，这个题首先就是你要回溯出各个项，然后还有遍历判断，这遍历可有门道了，不会！</p><h2 id="算法很重要" tabindex="-1"><a class="header-anchor" href="#算法很重要"><span>算法很重要</span></a></h2><p>先来聊聊面试，这是大家从学校走向社会的重要一步。校招和社招的面试，一般来说有2-3轮技术面试和1轮HR面试。技术面试可能现场也可能电话，HR面试有些公司还不一定有，这种情况就是三轮技术面，当然可能有的公司面试跟上面说的不太一样，但正常来说是这样的。</p><p>对于技术面试来说，基本可以这样讲：技术面试=基础知识和业务逻辑面试+算法面试。所谓基础知识和业务逻辑面试，就是对你应聘岗位进行相关知识的考察，通俗地讲就是看你有没有干这份工作的专业能力。比如你要应聘前端岗位，那js、css、html和 jQuery的一些问题肯定会问。第一步如果你过了的话，那就来到了算法面试，通常会以代码的形式考察，很少会单讲算法。</p><p>从上面的：技术面试=基础知识和业务逻辑面试+算法面试 来看，对于业务逻辑知识层面的，那没的说，你想从事这个岗位的工作，那这一部分知识是必备的。但我们可以看出算法的普遍性，这也正是算法重要的原因之一：它是一种通用的考察点，不管你应聘哪个岗位都可以进行考察；</p><p>另外考察算法的另一个非常重要的原因是：它包含了太多的逻辑思维，可以考察你思考问题的逻辑和解决问题的能力；这一点也是面试官比较看重的，因为它可以反映出你的潜力，我曾经听阿里一位资深面试官这样讲过：当一个人逻辑思维和能力不错的情况下，你还会担心专业的业务知识方面他不行或者学不会吗？”管中窥豹，算法的重要性我想大家都应该明白了。</p><blockquote><p>其实想说的算法重要的原因是：它是你扎实基本功的反映之一，这些东西很大程度上会决定你未来在IT这条路上到底能走多远。 现实点说，由于现在互联网行业薪酬较高的实际情况，很多人会报班或者半路出家去学IT，其实这变相拉低了广义上程序员的门槛，似乎大家都可以通过这条路来寻求高薪。那作为想或者已经从事这个行业的我们，如果你是科班的，那再好不过了，请珍惜这个机会；如果你不是，但也想干这行，在竞争越来越激烈的今天，必须要有点硬功夫，而上面说的算法就是其中之一，当然还包括类似于数据结构、汇编、组原、计网、数学等等，如果这些学好的话，它们是和别人竞争的一项无形的资本，也就是我们说的会让你有区分度。</p></blockquote><p>计算机相关专业出来的，大学四年数据结构与算法都学不好，有什么能拿出来的呢，我是这样的想法。</p><h2 id="开始系统学算法-日常刷题" tabindex="-1"><a class="header-anchor" href="#开始系统学算法-日常刷题"><span>开始系统学算法+日常刷题</span></a></h2><p><img src="'+a+'" alt="leetcode.png"></p><p>我的学习路径：</p><ul><li>首先就是了解基础的数据结构，用自己擅长的语言手写数据结构</li><li>刷算法题不要从动态规划和简单题开始刷，避免很难或者漫无目的的刷题</li><li>从二叉树、链表题开始、到二分双指针矩阵、再到动态规划贪心回溯等。慢慢来，可以跟着代码随想录网站来的！</li><li>找到适合自己的算法学习方法，你的效率会变高的。比如我就是刷力扣Hot100，不会的就看题解或者视频。</li></ul><blockquote><p>成果：连续的两个月刷题，自己确实在这上面学到了很多，我自己更有想法好好去学去刷算法题。面试算法基本能过了现在！</p></blockquote>',18),n=[s];function p(c,r){return l(),t("div",null,n)}const h=e(o,[["render",p],["__file","index.html.vue"]]),m=JSON.parse('{"path":"/algorithm/","title":"介绍","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"算法很重要","slug":"算法很重要","link":"#算法很重要","children":[]},{"level":2,"title":"开始系统学算法+日常刷题","slug":"开始系统学算法-日常刷题","link":"#开始系统学算法-日常刷题","children":[]}],"filePathRelative":"algorithm/README.md","git":{"createdTime":1715588813000,"updatedTime":1717914125000,"contributors":[{"name":"xiaoyu","email":"luoyu2003@outlook.com","commits":4}]},"readingTime":{"minutes":5.07,"words":1521}}');export{h as comp,m as data};
